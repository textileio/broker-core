// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"fmt"
	"time"

	"github.com/textileio/bidbot/lib/auction"
	"github.com/textileio/broker-core/broker"
)

// @enum
// @enumName StoragePayloadStatus
type BatchStatus string

const (
	BatchStatusUnknown    BatchStatus = "unknown"
	BatchStatusPreparing  BatchStatus = "preparing"
	BatchStatusAuctioning BatchStatus = "auctioning"
	BatchStatusDealMaking BatchStatus = "deal_making"
	BatchStatusSuccess    BatchStatus = "success"
	BatchStatusError      BatchStatus = "error"
)

func (e *BatchStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = BatchStatus(s)
	case string:
		*e = BatchStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for BatchStatus: %T", src)
	}
	return nil
}

type StorageRequestStatus string

const (
	StorageRequestStatusUnknown    StorageRequestStatus = "unknown"
	StorageRequestStatusBatching   StorageRequestStatus = "batching"
	StorageRequestStatusPreparing  StorageRequestStatus = "preparing"
	StorageRequestStatusAuctioning StorageRequestStatus = "auctioning"
	StorageRequestStatusDealMaking StorageRequestStatus = "deal_making"
	StorageRequestStatusSuccess    StorageRequestStatus = "success"
	StorageRequestStatusError      StorageRequestStatus = "error"
)

func (e *StorageRequestStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = StorageRequestStatus(s)
	case string:
		*e = StorageRequestStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for StorageRequestStatus: %T", src)
	}
	return nil
}

type Batch struct {
	ID                 broker.BatchID     `json:"id"`
	RepFactor          int                `json:"repFactor"`
	DealDuration       int                `json:"dealDuration"`
	PayloadCid         string             `json:"payloadCid"`
	PieceCid           string             `json:"pieceCid"`
	PieceSize          uint64             `json:"pieceSize"`
	CarUrl             string             `json:"carUrl"`
	CarIpfsCid         string             `json:"carIpfsCid"`
	CarIpfsAddrs       string             `json:"carIpfsAddrs"`
	DisallowRebatching bool               `json:"disallowRebatching"`
	FilEpochDeadline   uint64             `json:"filEpochDeadline"`
	Error              string             `json:"error"`
	Origin             string             `json:"origin"`
	CreatedAt          time.Time          `json:"createdAt"`
	UpdatedAt          time.Time          `json:"updatedAt"`
	Providers          []string           `json:"providers"`
	Status             broker.BatchStatus `json:"status"`
}

type BatchManifest struct {
	BatchID  string `json:"batchID"`
	Manifest []byte `json:"manifest"`
}

type BatchRemoteWallet struct {
	BatchID    broker.BatchID `json:"batchID"`
	PeerID     string         `json:"peerID"`
	AuthToken  string         `json:"authToken"`
	WalletAddr string         `json:"walletAddr"`
	Multiaddrs []string       `json:"multiaddrs"`
	CreatedAt  time.Time      `json:"createdAt"`
	UpdatedAt  time.Time      `json:"updatedAt"`
}

type BatchTag struct {
	BatchID   broker.BatchID `json:"batchID"`
	Key       string         `json:"key"`
	Value     string         `json:"value"`
	CreatedAt time.Time      `json:"createdAt"`
}

type Deal struct {
	BatchID           broker.BatchID `json:"batchID"`
	AuctionID         auction.ID     `json:"auctionID"`
	BidID             auction.BidID  `json:"bidID"`
	StorageProviderID string         `json:"storageProviderID"`
	DealID            int64          `json:"dealID"`
	DealExpiration    uint64         `json:"dealExpiration"`
	ErrorCause        string         `json:"errorCause"`
	CreatedAt         time.Time      `json:"createdAt"`
	UpdatedAt         time.Time      `json:"updatedAt"`
}

type Operation struct {
	ID        string    `json:"id"`
	CreatedAt time.Time `json:"createdAt"`
}

type StorageRequest struct {
	ID           broker.StorageRequestID     `json:"id"`
	DataCid      string                      `json:"dataCid"`
	BatchID      sql.NullString              `json:"batchID"`
	Origin       string                      `json:"origin"`
	RebatchCount int32                       `json:"rebatchCount"`
	ErrorCause   string                      `json:"errorCause"`
	CreatedAt    time.Time                   `json:"createdAt"`
	UpdatedAt    time.Time                   `json:"updatedAt"`
	Status       broker.StorageRequestStatus `json:"status"`
}

type UnpinJob struct {
	ID        string       `json:"id"`
	Executing sql.NullBool `json:"executing"`
	Cid       string       `json:"cid"`
	Type      int16        `json:"type"`
	ReadyAt   time.Time    `json:"readyAt"`
	CreatedAt time.Time    `json:"createdAt"`
	UpdatedAt time.Time    `json:"updatedAt"`
}
