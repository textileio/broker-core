// Code generated by sqlc. DO NOT EDIT.
// source: auth.sql

package db

import (
	"context"
)

const createAuthToken = `-- name: CreateAuthToken :exec
INSERT INTO auth_tokens (token,identity,origin)
VALUES ($1,$2,$3)
`

type CreateAuthTokenParams struct {
	Token    string `json:"token"`
	Identity string `json:"identity"`
	Origin   string `json:"origin"`
}

func (q *Queries) CreateAuthToken(ctx context.Context, arg CreateAuthTokenParams) error {
	_, err := q.exec(ctx, q.createAuthTokenStmt, createAuthToken, arg.Token, arg.Identity, arg.Origin)
	return err
}

const getAuthToken = `-- name: GetAuthToken :one
SELECT token, identity, origin, created_at FROM auth_tokens
WHERE token = $1
`

func (q *Queries) GetAuthToken(ctx context.Context, token string) (AuthToken, error) {
	row := q.queryRow(ctx, q.getAuthTokenStmt, getAuthToken, token)
	var i AuthToken
	err := row.Scan(
		&i.Token,
		&i.Identity,
		&i.Origin,
		&i.CreatedAt,
	)
	return i, err
}
