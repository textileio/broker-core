// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: broker/v1/broker.proto

package broker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuctionClosed_Status int32

const (
	AuctionClosed_STATUS_UNSPECIFIED AuctionClosed_Status = 0
	AuctionClosed_STATUS_QUEUED      AuctionClosed_Status = 1
	AuctionClosed_STATUS_STARTED     AuctionClosed_Status = 2
	AuctionClosed_STATUS_FINALIZED   AuctionClosed_Status = 3
)

// Enum value maps for AuctionClosed_Status.
var (
	AuctionClosed_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_QUEUED",
		2: "STATUS_STARTED",
		3: "STATUS_FINALIZED",
	}
	AuctionClosed_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_QUEUED":      1,
		"STATUS_STARTED":     2,
		"STATUS_FINALIZED":   3,
	}
)

func (x AuctionClosed_Status) Enum() *AuctionClosed_Status {
	p := new(AuctionClosed_Status)
	*p = x
	return p
}

func (x AuctionClosed_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuctionClosed_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_broker_v1_broker_proto_enumTypes[0].Descriptor()
}

func (AuctionClosed_Status) Type() protoreflect.EnumType {
	return &file_broker_v1_broker_proto_enumTypes[0]
}

func (x AuctionClosed_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuctionClosed_Status.Descriptor instead.
func (AuctionClosed_Status) EnumDescriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{12, 0}
}

type StorageRequest_Status int32

const (
	StorageRequest_STATUS_UNSPECIFIED StorageRequest_Status = 0
	StorageRequest_STATUS_BATCHING    StorageRequest_Status = 1
	StorageRequest_STATUS_PREPARING   StorageRequest_Status = 2
	StorageRequest_STATUS_AUCTIONING  StorageRequest_Status = 3
	StorageRequest_STATUS_DEALMAKING  StorageRequest_Status = 4
	StorageRequest_STATUS_SUCCESS     StorageRequest_Status = 5
	StorageRequest_STATUS_ERROR       StorageRequest_Status = 6
)

// Enum value maps for StorageRequest_Status.
var (
	StorageRequest_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_BATCHING",
		2: "STATUS_PREPARING",
		3: "STATUS_AUCTIONING",
		4: "STATUS_DEALMAKING",
		5: "STATUS_SUCCESS",
		6: "STATUS_ERROR",
	}
	StorageRequest_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_BATCHING":    1,
		"STATUS_PREPARING":   2,
		"STATUS_AUCTIONING":  3,
		"STATUS_DEALMAKING":  4,
		"STATUS_SUCCESS":     5,
		"STATUS_ERROR":       6,
	}
)

func (x StorageRequest_Status) Enum() *StorageRequest_Status {
	p := new(StorageRequest_Status)
	*p = x
	return p
}

func (x StorageRequest_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageRequest_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_broker_v1_broker_proto_enumTypes[1].Descriptor()
}

func (StorageRequest_Status) Type() protoreflect.EnumType {
	return &file_broker_v1_broker_proto_enumTypes[1]
}

func (x StorageRequest_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageRequest_Status.Descriptor instead.
func (StorageRequest_Status) EnumDescriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{15, 0}
}

type CreateStorageRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid    string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Origin string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *CreateStorageRequestRequest) Reset() {
	*x = CreateStorageRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStorageRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageRequestRequest) ProtoMessage() {}

func (x *CreateStorageRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStorageRequestRequest.ProtoReflect.Descriptor instead.
func (*CreateStorageRequestRequest) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{0}
}

func (x *CreateStorageRequestRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CreateStorageRequestRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type CreateStorageRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *StorageRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *CreateStorageRequestResponse) Reset() {
	*x = CreateStorageRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStorageRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageRequestResponse) ProtoMessage() {}

func (x *CreateStorageRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStorageRequestResponse.ProtoReflect.Descriptor instead.
func (*CreateStorageRequestResponse) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{1}
}

func (x *CreateStorageRequestResponse) GetRequest() *StorageRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type CreatePreparedStorageRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid         string                                           `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	PreparedCar *CreatePreparedStorageRequestRequest_PreparedCAR `protobuf:"bytes,2,opt,name=prepared_car,json=preparedCar,proto3" json:"prepared_car,omitempty"`
	Metadata    *CreatePreparedStorageRequestRequest_Metadata    `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *CreatePreparedStorageRequestRequest) Reset() {
	*x = CreatePreparedStorageRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePreparedStorageRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePreparedStorageRequestRequest) ProtoMessage() {}

func (x *CreatePreparedStorageRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePreparedStorageRequestRequest.ProtoReflect.Descriptor instead.
func (*CreatePreparedStorageRequestRequest) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePreparedStorageRequestRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CreatePreparedStorageRequestRequest) GetPreparedCar() *CreatePreparedStorageRequestRequest_PreparedCAR {
	if x != nil {
		return x.PreparedCar
	}
	return nil
}

func (x *CreatePreparedStorageRequestRequest) GetMetadata() *CreatePreparedStorageRequestRequest_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CreatePreparedStorageRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *StorageRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *CreatePreparedStorageRequestResponse) Reset() {
	*x = CreatePreparedStorageRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePreparedStorageRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePreparedStorageRequestResponse) ProtoMessage() {}

func (x *CreatePreparedStorageRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePreparedStorageRequestResponse.ProtoReflect.Descriptor instead.
func (*CreatePreparedStorageRequestResponse) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePreparedStorageRequestResponse) GetRequest() *StorageRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetStorageRequestInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetStorageRequestInfoRequest) Reset() {
	*x = GetStorageRequestInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageRequestInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageRequestInfoRequest) ProtoMessage() {}

func (x *GetStorageRequestInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageRequestInfoRequest.ProtoReflect.Descriptor instead.
func (*GetStorageRequestInfoRequest) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{4}
}

func (x *GetStorageRequestInfoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetStorageRequestInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageRequest *StorageRequest                                     `protobuf:"bytes,1,opt,name=storage_request,json=storageRequest,proto3" json:"storage_request,omitempty"`
	Deals          []*GetStorageRequestInfoResponse_StorageRequestDeal `protobuf:"bytes,2,rep,name=deals,proto3" json:"deals,omitempty"`
}

func (x *GetStorageRequestInfoResponse) Reset() {
	*x = GetStorageRequestInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageRequestInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageRequestInfoResponse) ProtoMessage() {}

func (x *GetStorageRequestInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageRequestInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStorageRequestInfoResponse) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{5}
}

func (x *GetStorageRequestInfoResponse) GetStorageRequest() *StorageRequest {
	if x != nil {
		return x.StorageRequest
	}
	return nil
}

func (x *GetStorageRequestInfoResponse) GetDeals() []*GetStorageRequestInfoResponse_StorageRequestDeal {
	if x != nil {
		return x.Deals
	}
	return nil
}

type Sources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarUrl  *Sources_CARURL  `protobuf:"bytes,1,opt,name=car_url,json=carUrl,proto3" json:"car_url,omitempty"`
	CarIpfs *Sources_CARIPFS `protobuf:"bytes,2,opt,name=car_ipfs,json=carIpfs,proto3" json:"car_ipfs,omitempty"`
}

func (x *Sources) Reset() {
	*x = Sources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sources) ProtoMessage() {}

func (x *Sources) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sources.ProtoReflect.Descriptor instead.
func (*Sources) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{6}
}

func (x *Sources) GetCarUrl() *Sources_CARURL {
	if x != nil {
		return x.CarUrl
	}
	return nil
}

func (x *Sources) GetCarIpfs() *Sources_CARIPFS {
	if x != nil {
		return x.CarIpfs
	}
	return nil
}

type ReadyToAuction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BatchId                  string   `protobuf:"bytes,2,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	PayloadCid               []byte   `protobuf:"bytes,3,opt,name=payload_cid,json=payloadCid,proto3" json:"payload_cid,omitempty"`
	DealSize                 uint64   `protobuf:"varint,4,opt,name=deal_size,json=dealSize,proto3" json:"deal_size,omitempty"`
	DealDuration             uint64   `protobuf:"varint,5,opt,name=deal_duration,json=dealDuration,proto3" json:"deal_duration,omitempty"`
	DealReplication          uint32   `protobuf:"varint,6,opt,name=deal_replication,json=dealReplication,proto3" json:"deal_replication,omitempty"`
	DealVerified             bool     `protobuf:"varint,7,opt,name=deal_verified,json=dealVerified,proto3" json:"deal_verified,omitempty"`
	ExcludedStorageProviders []string `protobuf:"bytes,8,rep,name=excluded_storage_providers,json=excludedStorageProviders,proto3" json:"excluded_storage_providers,omitempty"`
	FilEpochDeadline         uint64   `protobuf:"varint,9,opt,name=fil_epoch_deadline,json=filEpochDeadline,proto3" json:"fil_epoch_deadline,omitempty"`
	Sources                  *Sources `protobuf:"bytes,10,opt,name=sources,proto3" json:"sources,omitempty"`
}

func (x *ReadyToAuction) Reset() {
	*x = ReadyToAuction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToAuction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToAuction) ProtoMessage() {}

func (x *ReadyToAuction) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToAuction.ProtoReflect.Descriptor instead.
func (*ReadyToAuction) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{7}
}

func (x *ReadyToAuction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReadyToAuction) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *ReadyToAuction) GetPayloadCid() []byte {
	if x != nil {
		return x.PayloadCid
	}
	return nil
}

func (x *ReadyToAuction) GetDealSize() uint64 {
	if x != nil {
		return x.DealSize
	}
	return 0
}

func (x *ReadyToAuction) GetDealDuration() uint64 {
	if x != nil {
		return x.DealDuration
	}
	return 0
}

func (x *ReadyToAuction) GetDealReplication() uint32 {
	if x != nil {
		return x.DealReplication
	}
	return 0
}

func (x *ReadyToAuction) GetDealVerified() bool {
	if x != nil {
		return x.DealVerified
	}
	return false
}

func (x *ReadyToAuction) GetExcludedStorageProviders() []string {
	if x != nil {
		return x.ExcludedStorageProviders
	}
	return nil
}

func (x *ReadyToAuction) GetFilEpochDeadline() uint64 {
	if x != nil {
		return x.FilEpochDeadline
	}
	return 0
}

func (x *ReadyToAuction) GetSources() *Sources {
	if x != nil {
		return x.Sources
	}
	return nil
}

type ReadyToCreateDeals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId    string                         `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	PayloadCid []byte                         `protobuf:"bytes,2,opt,name=payload_cid,json=payloadCid,proto3" json:"payload_cid,omitempty"`
	PieceCid   []byte                         `protobuf:"bytes,3,opt,name=piece_cid,json=pieceCid,proto3" json:"piece_cid,omitempty"`
	PieceSize  uint64                         `protobuf:"varint,4,opt,name=piece_size,json=pieceSize,proto3" json:"piece_size,omitempty"`
	Duration   uint64                         `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Proposals  []*ReadyToCreateDeals_Proposal `protobuf:"bytes,6,rep,name=proposals,proto3" json:"proposals,omitempty"`
}

func (x *ReadyToCreateDeals) Reset() {
	*x = ReadyToCreateDeals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToCreateDeals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToCreateDeals) ProtoMessage() {}

func (x *ReadyToCreateDeals) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToCreateDeals.ProtoReflect.Descriptor instead.
func (*ReadyToCreateDeals) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{8}
}

func (x *ReadyToCreateDeals) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *ReadyToCreateDeals) GetPayloadCid() []byte {
	if x != nil {
		return x.PayloadCid
	}
	return nil
}

func (x *ReadyToCreateDeals) GetPieceCid() []byte {
	if x != nil {
		return x.PieceCid
	}
	return nil
}

func (x *ReadyToCreateDeals) GetPieceSize() uint64 {
	if x != nil {
		return x.PieceSize
	}
	return 0
}

func (x *ReadyToCreateDeals) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ReadyToCreateDeals) GetProposals() []*ReadyToCreateDeals_Proposal {
	if x != nil {
		return x.Proposals
	}
	return nil
}

type ReadyToBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId string                         `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	DataCids    []*ReadyToBatch_ReadyToBatchBR `protobuf:"bytes,2,rep,name=data_cids,json=dataCids,proto3" json:"data_cids,omitempty"`
}

func (x *ReadyToBatch) Reset() {
	*x = ReadyToBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToBatch) ProtoMessage() {}

func (x *ReadyToBatch) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToBatch.ProtoReflect.Descriptor instead.
func (*ReadyToBatch) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{9}
}

func (x *ReadyToBatch) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *ReadyToBatch) GetDataCids() []*ReadyToBatch_ReadyToBatchBR {
	if x != nil {
		return x.DataCids
	}
	return nil
}

type NewBatchCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BatchCid          []byte   `protobuf:"bytes,2,opt,name=batch_cid,json=batchCid,proto3" json:"batch_cid,omitempty"`
	StorageRequestIds []string `protobuf:"bytes,3,rep,name=storage_request_ids,json=storageRequestIds,proto3" json:"storage_request_ids,omitempty"`
	Origin            string   `protobuf:"bytes,4,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *NewBatchCreated) Reset() {
	*x = NewBatchCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBatchCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBatchCreated) ProtoMessage() {}

func (x *NewBatchCreated) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBatchCreated.ProtoReflect.Descriptor instead.
func (*NewBatchCreated) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{10}
}

func (x *NewBatchCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NewBatchCreated) GetBatchCid() []byte {
	if x != nil {
		return x.BatchCid
	}
	return nil
}

func (x *NewBatchCreated) GetStorageRequestIds() []string {
	if x != nil {
		return x.StorageRequestIds
	}
	return nil
}

func (x *NewBatchCreated) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type DealProposalAccepted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId           string `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	StorageProviderId string `protobuf:"bytes,2,opt,name=storage_provider_id,json=storageProviderId,proto3" json:"storage_provider_id,omitempty"`
	ProposalCid       []byte `protobuf:"bytes,3,opt,name=proposal_cid,json=proposalCid,proto3" json:"proposal_cid,omitempty"`
	AuctionId         string `protobuf:"bytes,4,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
	BidId             string `protobuf:"bytes,5,opt,name=bid_id,json=bidId,proto3" json:"bid_id,omitempty"`
}

func (x *DealProposalAccepted) Reset() {
	*x = DealProposalAccepted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealProposalAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealProposalAccepted) ProtoMessage() {}

func (x *DealProposalAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealProposalAccepted.ProtoReflect.Descriptor instead.
func (*DealProposalAccepted) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{11}
}

func (x *DealProposalAccepted) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *DealProposalAccepted) GetStorageProviderId() string {
	if x != nil {
		return x.StorageProviderId
	}
	return ""
}

func (x *DealProposalAccepted) GetProposalCid() []byte {
	if x != nil {
		return x.ProposalCid
	}
	return nil
}

func (x *DealProposalAccepted) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *DealProposalAccepted) GetBidId() string {
	if x != nil {
		return x.BidId
	}
	return ""
}

type AuctionClosed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BatchId         string                               `protobuf:"bytes,2,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	DealDuration    uint64                               `protobuf:"varint,3,opt,name=deal_duration,json=dealDuration,proto3" json:"deal_duration,omitempty"`
	DealReplication uint32                               `protobuf:"varint,4,opt,name=deal_replication,json=dealReplication,proto3" json:"deal_replication,omitempty"`
	DealVerified    bool                                 `protobuf:"varint,5,opt,name=deal_verified,json=dealVerified,proto3" json:"deal_verified,omitempty"`
	Status          AuctionClosed_Status                 `protobuf:"varint,6,opt,name=status,proto3,enum=broker.v1.AuctionClosed_Status" json:"status,omitempty"`
	WinningBids     map[string]*AuctionClosed_WinningBid `protobuf:"bytes,7,rep,name=winning_bids,json=winningBids,proto3" json:"winning_bids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Error           string                               `protobuf:"bytes,8,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AuctionClosed) Reset() {
	*x = AuctionClosed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionClosed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionClosed) ProtoMessage() {}

func (x *AuctionClosed) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionClosed.ProtoReflect.Descriptor instead.
func (*AuctionClosed) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{12}
}

func (x *AuctionClosed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuctionClosed) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *AuctionClosed) GetDealDuration() uint64 {
	if x != nil {
		return x.DealDuration
	}
	return 0
}

func (x *AuctionClosed) GetDealReplication() uint32 {
	if x != nil {
		return x.DealReplication
	}
	return 0
}

func (x *AuctionClosed) GetDealVerified() bool {
	if x != nil {
		return x.DealVerified
	}
	return false
}

func (x *AuctionClosed) GetStatus() AuctionClosed_Status {
	if x != nil {
		return x.Status
	}
	return AuctionClosed_STATUS_UNSPECIFIED
}

func (x *AuctionClosed) GetWinningBids() map[string]*AuctionClosed_WinningBid {
	if x != nil {
		return x.WinningBids
	}
	return nil
}

func (x *AuctionClosed) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type NewBatchPrepared struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PieceCid  []byte `protobuf:"bytes,2,opt,name=piece_cid,json=pieceCid,proto3" json:"piece_cid,omitempty"`
	PieceSize uint64 `protobuf:"varint,3,opt,name=piece_size,json=pieceSize,proto3" json:"piece_size,omitempty"`
}

func (x *NewBatchPrepared) Reset() {
	*x = NewBatchPrepared{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBatchPrepared) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBatchPrepared) ProtoMessage() {}

func (x *NewBatchPrepared) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBatchPrepared.ProtoReflect.Descriptor instead.
func (*NewBatchPrepared) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{13}
}

func (x *NewBatchPrepared) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NewBatchPrepared) GetPieceCid() []byte {
	if x != nil {
		return x.PieceCid
	}
	return nil
}

func (x *NewBatchPrepared) GetPieceSize() uint64 {
	if x != nil {
		return x.PieceSize
	}
	return 0
}

type FinalizedDeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId           string `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	DealId            int64  `protobuf:"varint,2,opt,name=deal_id,json=dealId,proto3" json:"deal_id,omitempty"`
	DealExpiration    uint64 `protobuf:"varint,3,opt,name=deal_expiration,json=dealExpiration,proto3" json:"deal_expiration,omitempty"`
	StorageProviderId string `protobuf:"bytes,4,opt,name=storage_provider_id,json=storageProviderId,proto3" json:"storage_provider_id,omitempty"`
	ErrorCause        string `protobuf:"bytes,5,opt,name=error_cause,json=errorCause,proto3" json:"error_cause,omitempty"`
	AuctionId         string `protobuf:"bytes,6,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
	BidId             string `protobuf:"bytes,7,opt,name=bid_id,json=bidId,proto3" json:"bid_id,omitempty"`
}

func (x *FinalizedDeal) Reset() {
	*x = FinalizedDeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizedDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizedDeal) ProtoMessage() {}

func (x *FinalizedDeal) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizedDeal.ProtoReflect.Descriptor instead.
func (*FinalizedDeal) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{14}
}

func (x *FinalizedDeal) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *FinalizedDeal) GetDealId() int64 {
	if x != nil {
		return x.DealId
	}
	return 0
}

func (x *FinalizedDeal) GetDealExpiration() uint64 {
	if x != nil {
		return x.DealExpiration
	}
	return 0
}

func (x *FinalizedDeal) GetStorageProviderId() string {
	if x != nil {
		return x.StorageProviderId
	}
	return ""
}

func (x *FinalizedDeal) GetErrorCause() string {
	if x != nil {
		return x.ErrorCause
	}
	return ""
}

func (x *FinalizedDeal) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *FinalizedDeal) GetBidId() string {
	if x != nil {
		return x.BidId
	}
	return ""
}

type StorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DataCid   []byte                 `protobuf:"bytes,2,opt,name=data_cid,json=dataCid,proto3" json:"data_cid,omitempty"`
	Status    StorageRequest_Status  `protobuf:"varint,3,opt,name=status,proto3,enum=broker.v1.StorageRequest_Status" json:"status,omitempty"`
	BatchId   string                 `protobuf:"bytes,4,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Origin    string                 `protobuf:"bytes,5,opt,name=origin,proto3" json:"origin,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *StorageRequest) Reset() {
	*x = StorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageRequest) ProtoMessage() {}

func (x *StorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageRequest.ProtoReflect.Descriptor instead.
func (*StorageRequest) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{15}
}

func (x *StorageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StorageRequest) GetDataCid() []byte {
	if x != nil {
		return x.DataCid
	}
	return nil
}

func (x *StorageRequest) GetStatus() StorageRequest_Status {
	if x != nil {
		return x.Status
	}
	return StorageRequest_STATUS_UNSPECIFIED
}

func (x *StorageRequest) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *StorageRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *StorageRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *StorageRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreatePreparedStorageRequestRequest_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string            `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Tags   map[string]string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreatePreparedStorageRequestRequest_Metadata) Reset() {
	*x = CreatePreparedStorageRequestRequest_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePreparedStorageRequestRequest_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePreparedStorageRequestRequest_Metadata) ProtoMessage() {}

func (x *CreatePreparedStorageRequestRequest_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePreparedStorageRequestRequest_Metadata.ProtoReflect.Descriptor instead.
func (*CreatePreparedStorageRequestRequest_Metadata) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CreatePreparedStorageRequestRequest_Metadata) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *CreatePreparedStorageRequestRequest_Metadata) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CreatePreparedStorageRequestRequest_PreparedCAR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PieceCid  string                                                   `protobuf:"bytes,1,opt,name=piece_cid,json=pieceCid,proto3" json:"piece_cid,omitempty"`
	PieceSize uint64                                                   `protobuf:"varint,2,opt,name=piece_size,json=pieceSize,proto3" json:"piece_size,omitempty"`
	RepFactor int64                                                    `protobuf:"varint,3,opt,name=rep_factor,json=repFactor,proto3" json:"rep_factor,omitempty"`
	Deadline  *timestamppb.Timestamp                                   `protobuf:"bytes,4,opt,name=deadline,proto3" json:"deadline,omitempty"`
	CarUrl    *CreatePreparedStorageRequestRequest_PreparedCAR_CARURL  `protobuf:"bytes,5,opt,name=car_url,json=carUrl,proto3" json:"car_url,omitempty"`
	CarIpfs   *CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS `protobuf:"bytes,6,opt,name=car_ipfs,json=carIpfs,proto3" json:"car_ipfs,omitempty"`
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR) Reset() {
	*x = CreatePreparedStorageRequestRequest_PreparedCAR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePreparedStorageRequestRequest_PreparedCAR) ProtoMessage() {}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePreparedStorageRequestRequest_PreparedCAR.ProtoReflect.Descriptor instead.
func (*CreatePreparedStorageRequestRequest_PreparedCAR) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{2, 1}
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR) GetPieceCid() string {
	if x != nil {
		return x.PieceCid
	}
	return ""
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR) GetPieceSize() uint64 {
	if x != nil {
		return x.PieceSize
	}
	return 0
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR) GetRepFactor() int64 {
	if x != nil {
		return x.RepFactor
	}
	return 0
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR) GetCarUrl() *CreatePreparedStorageRequestRequest_PreparedCAR_CARURL {
	if x != nil {
		return x.CarUrl
	}
	return nil
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR) GetCarIpfs() *CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS {
	if x != nil {
		return x.CarIpfs
	}
	return nil
}

type CreatePreparedStorageRequestRequest_PreparedCAR_CARURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR_CARURL) Reset() {
	*x = CreatePreparedStorageRequestRequest_PreparedCAR_CARURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR_CARURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePreparedStorageRequestRequest_PreparedCAR_CARURL) ProtoMessage() {}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR_CARURL) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePreparedStorageRequestRequest_PreparedCAR_CARURL.ProtoReflect.Descriptor instead.
func (*CreatePreparedStorageRequestRequest_PreparedCAR_CARURL) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{2, 1, 0}
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR_CARURL) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid        string   `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Multiaddrs []string `protobuf:"bytes,2,rep,name=multiaddrs,proto3" json:"multiaddrs,omitempty"`
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS) Reset() {
	*x = CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS) ProtoMessage() {}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS.ProtoReflect.Descriptor instead.
func (*CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{2, 1, 1}
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS) GetMultiaddrs() []string {
	if x != nil {
		return x.Multiaddrs
	}
	return nil
}

type GetStorageRequestInfoResponse_StorageRequestDeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageProviderId string `protobuf:"bytes,1,opt,name=storage_provider_id,json=storageProviderId,proto3" json:"storage_provider_id,omitempty"`
	DealId            int64  `protobuf:"varint,2,opt,name=deal_id,json=dealId,proto3" json:"deal_id,omitempty"`
	Expiration        uint64 `protobuf:"varint,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *GetStorageRequestInfoResponse_StorageRequestDeal) Reset() {
	*x = GetStorageRequestInfoResponse_StorageRequestDeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageRequestInfoResponse_StorageRequestDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageRequestInfoResponse_StorageRequestDeal) ProtoMessage() {}

func (x *GetStorageRequestInfoResponse_StorageRequestDeal) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageRequestInfoResponse_StorageRequestDeal.ProtoReflect.Descriptor instead.
func (*GetStorageRequestInfoResponse_StorageRequestDeal) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetStorageRequestInfoResponse_StorageRequestDeal) GetStorageProviderId() string {
	if x != nil {
		return x.StorageProviderId
	}
	return ""
}

func (x *GetStorageRequestInfoResponse_StorageRequestDeal) GetDealId() int64 {
	if x != nil {
		return x.DealId
	}
	return 0
}

func (x *GetStorageRequestInfoResponse_StorageRequestDeal) GetExpiration() uint64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

type Sources_CARURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Sources_CARURL) Reset() {
	*x = Sources_CARURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sources_CARURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sources_CARURL) ProtoMessage() {}

func (x *Sources_CARURL) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sources_CARURL.ProtoReflect.Descriptor instead.
func (*Sources_CARURL) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Sources_CARURL) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Sources_CARIPFS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid        string   `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Multiaddrs []string `protobuf:"bytes,2,rep,name=multiaddrs,proto3" json:"multiaddrs,omitempty"`
}

func (x *Sources_CARIPFS) Reset() {
	*x = Sources_CARIPFS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sources_CARIPFS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sources_CARIPFS) ProtoMessage() {}

func (x *Sources_CARIPFS) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sources_CARIPFS.ProtoReflect.Descriptor instead.
func (*Sources_CARIPFS) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Sources_CARIPFS) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Sources_CARIPFS) GetMultiaddrs() []string {
	if x != nil {
		return x.Multiaddrs
	}
	return nil
}

type ReadyToCreateDeals_Proposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageProviderId   string `protobuf:"bytes,1,opt,name=storage_provider_id,json=storageProviderId,proto3" json:"storage_provider_id,omitempty"`
	PricePerGibPerEpoch int64  `protobuf:"varint,2,opt,name=price_per_gib_per_epoch,json=pricePerGibPerEpoch,proto3" json:"price_per_gib_per_epoch,omitempty"`
	StartEpoch          uint64 `protobuf:"varint,3,opt,name=start_epoch,json=startEpoch,proto3" json:"start_epoch,omitempty"`
	Verified            bool   `protobuf:"varint,4,opt,name=verified,proto3" json:"verified,omitempty"`
	FastRetrieval       bool   `protobuf:"varint,5,opt,name=fast_retrieval,json=fastRetrieval,proto3" json:"fast_retrieval,omitempty"`
	AuctionId           string `protobuf:"bytes,6,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
	BidId               string `protobuf:"bytes,7,opt,name=bid_id,json=bidId,proto3" json:"bid_id,omitempty"`
}

func (x *ReadyToCreateDeals_Proposal) Reset() {
	*x = ReadyToCreateDeals_Proposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToCreateDeals_Proposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToCreateDeals_Proposal) ProtoMessage() {}

func (x *ReadyToCreateDeals_Proposal) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToCreateDeals_Proposal.ProtoReflect.Descriptor instead.
func (*ReadyToCreateDeals_Proposal) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ReadyToCreateDeals_Proposal) GetStorageProviderId() string {
	if x != nil {
		return x.StorageProviderId
	}
	return ""
}

func (x *ReadyToCreateDeals_Proposal) GetPricePerGibPerEpoch() int64 {
	if x != nil {
		return x.PricePerGibPerEpoch
	}
	return 0
}

func (x *ReadyToCreateDeals_Proposal) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *ReadyToCreateDeals_Proposal) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *ReadyToCreateDeals_Proposal) GetFastRetrieval() bool {
	if x != nil {
		return x.FastRetrieval
	}
	return false
}

func (x *ReadyToCreateDeals_Proposal) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *ReadyToCreateDeals_Proposal) GetBidId() string {
	if x != nil {
		return x.BidId
	}
	return ""
}

type ReadyToBatch_ReadyToBatchBR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageRequestId string `protobuf:"bytes,1,opt,name=storage_request_id,json=storageRequestId,proto3" json:"storage_request_id,omitempty"`
	DataCid          []byte `protobuf:"bytes,2,opt,name=data_cid,json=dataCid,proto3" json:"data_cid,omitempty"`
	Origin           string `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *ReadyToBatch_ReadyToBatchBR) Reset() {
	*x = ReadyToBatch_ReadyToBatchBR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToBatch_ReadyToBatchBR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToBatch_ReadyToBatchBR) ProtoMessage() {}

func (x *ReadyToBatch_ReadyToBatchBR) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToBatch_ReadyToBatchBR.ProtoReflect.Descriptor instead.
func (*ReadyToBatch_ReadyToBatchBR) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ReadyToBatch_ReadyToBatchBR) GetStorageRequestId() string {
	if x != nil {
		return x.StorageRequestId
	}
	return ""
}

func (x *ReadyToBatch_ReadyToBatchBR) GetDataCid() []byte {
	if x != nil {
		return x.DataCid
	}
	return nil
}

func (x *ReadyToBatch_ReadyToBatchBR) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type AuctionClosed_WinningBid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageProviderId string `protobuf:"bytes,1,opt,name=storage_provider_id,json=storageProviderId,proto3" json:"storage_provider_id,omitempty"`
	Price             int64  `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	StartEpoch        uint64 `protobuf:"varint,3,opt,name=start_epoch,json=startEpoch,proto3" json:"start_epoch,omitempty"`
	FastRetrieval     bool   `protobuf:"varint,4,opt,name=fast_retrieval,json=fastRetrieval,proto3" json:"fast_retrieval,omitempty"`
}

func (x *AuctionClosed_WinningBid) Reset() {
	*x = AuctionClosed_WinningBid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionClosed_WinningBid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionClosed_WinningBid) ProtoMessage() {}

func (x *AuctionClosed_WinningBid) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionClosed_WinningBid.ProtoReflect.Descriptor instead.
func (*AuctionClosed_WinningBid) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{12, 1}
}

func (x *AuctionClosed_WinningBid) GetStorageProviderId() string {
	if x != nil {
		return x.StorageProviderId
	}
	return ""
}

func (x *AuctionClosed_WinningBid) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AuctionClosed_WinningBid) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *AuctionClosed_WinningBid) GetFastRetrieval() bool {
	if x != nil {
		return x.FastRetrieval
	}
	return false
}

var File_broker_v1_broker_proto protoreflect.FileDescriptor

var file_broker_v1_broker_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x53, 0x0a,
	0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xd7, 0x06, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x5d, 0x0a, 0x0c,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x43, 0x41, 0x52, 0x52, 0x0b,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x12, 0x53, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0xb2, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x55, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xb4, 0x03, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x64, 0x43, 0x41, 0x52, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x63,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x65, 0x63, 0x65, 0x43,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x70, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x5a, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x64, 0x43, 0x41, 0x52, 0x2e, 0x43, 0x41, 0x52, 0x55, 0x52, 0x4c, 0x52, 0x06, 0x63, 0x61,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x5d, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f, 0x69, 0x70, 0x66, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x43,
	0x41, 0x52, 0x2e, 0x43, 0x41, 0x52, 0x49, 0x50, 0x46, 0x53, 0x52, 0x07, 0x63, 0x61, 0x72, 0x49,
	0x70, 0x66, 0x73, 0x1a, 0x1a, 0x0a, 0x06, 0x43, 0x41, 0x52, 0x55, 0x52, 0x4c, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a,
	0x3b, 0x0a, 0x07, 0x43, 0x41, 0x52, 0x49, 0x50, 0x46, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x61, 0x64, 0x64, 0x72, 0x73, 0x22, 0x5b, 0x0a, 0x24,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb5, 0x02, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x51, 0x0a, 0x05, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x05, 0x64, 0x65, 0x61,
	0x6c, 0x73, 0x1a, 0x7d, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xcd, 0x01, 0x0a, 0x07, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x32, 0x0a,
	0x07, 0x63, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x41, 0x52, 0x55, 0x52, 0x4c, 0x52, 0x06, 0x63, 0x61, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f, 0x69, 0x70, 0x66, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x41, 0x52, 0x49, 0x50, 0x46, 0x53, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x49, 0x70, 0x66, 0x73, 0x1a, 0x1a, 0x0a, 0x06, 0x43, 0x41, 0x52, 0x55,
	0x52, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x1a, 0x3b, 0x0a, 0x07, 0x43, 0x41, 0x52, 0x49, 0x50, 0x46, 0x53, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x61, 0x64, 0x64, 0x72,
	0x73, 0x22, 0x88, 0x03, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64, 0x65,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x65, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x64, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x66, 0x69,
	0x6c, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2c,
	0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0xfb, 0x03, 0x0a,
	0x12, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x61, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x70, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x70, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x1a, 0x8a, 0x02,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x17, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x67, 0x69, 0x62, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x69, 0x62, 0x50, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x61, 0x73, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x64, 0x49, 0x64, 0x22, 0xe9, 0x01, 0x0a, 0x0c, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x43,
	0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x54, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x54, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x42, 0x52, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x69, 0x64, 0x73, 0x1a, 0x71, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x42, 0x52, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x43, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22,
	0xba, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f,
	0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x43, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x64, 0x49, 0x64, 0x22, 0xad, 0x05, 0x0a,
	0x0d, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x61,
	0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x64, 0x65, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x10, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64, 0x65, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x61,
	0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x64, 0x65, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x37,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x0c, 0x77, 0x69, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x62, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x2e, 0x57, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x42,
	0x69, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x42, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x63, 0x0a, 0x10, 0x57,
	0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x2e, 0x57, 0x69, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x42, 0x69, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x9a, 0x01, 0x0a, 0x0a, 0x57, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x66, 0x61, 0x73, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x22, 0x5d, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x03, 0x22, 0x5e, 0x0a, 0x10,
	0x4e, 0x65, 0x77, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x70, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xf3, 0x01, 0x0a,
	0x0d, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x65, 0x61, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x65, 0x61,
	0x6c, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62,
	0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x64,
	0x49, 0x64, 0x22, 0xc0, 0x03, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x43, 0x69, 0x64,
	0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x42, 0x41, 0x54, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x55, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x44, 0x45, 0x41, 0x4c, 0x4d, 0x41, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x06, 0x32, 0xe9, 0x02, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x81, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x69, 0x6f, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x3b, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_broker_v1_broker_proto_rawDescOnce sync.Once
	file_broker_v1_broker_proto_rawDescData = file_broker_v1_broker_proto_rawDesc
)

func file_broker_v1_broker_proto_rawDescGZIP() []byte {
	file_broker_v1_broker_proto_rawDescOnce.Do(func() {
		file_broker_v1_broker_proto_rawDescData = protoimpl.X.CompressGZIP(file_broker_v1_broker_proto_rawDescData)
	})
	return file_broker_v1_broker_proto_rawDescData
}

var file_broker_v1_broker_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_broker_v1_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_broker_v1_broker_proto_goTypes = []interface{}{
	(AuctionClosed_Status)(0),                               // 0: broker.v1.AuctionClosed.Status
	(StorageRequest_Status)(0),                              // 1: broker.v1.StorageRequest.Status
	(*CreateStorageRequestRequest)(nil),                     // 2: broker.v1.CreateStorageRequestRequest
	(*CreateStorageRequestResponse)(nil),                    // 3: broker.v1.CreateStorageRequestResponse
	(*CreatePreparedStorageRequestRequest)(nil),             // 4: broker.v1.CreatePreparedStorageRequestRequest
	(*CreatePreparedStorageRequestResponse)(nil),            // 5: broker.v1.CreatePreparedStorageRequestResponse
	(*GetStorageRequestInfoRequest)(nil),                    // 6: broker.v1.GetStorageRequestInfoRequest
	(*GetStorageRequestInfoResponse)(nil),                   // 7: broker.v1.GetStorageRequestInfoResponse
	(*Sources)(nil),                                         // 8: broker.v1.Sources
	(*ReadyToAuction)(nil),                                  // 9: broker.v1.ReadyToAuction
	(*ReadyToCreateDeals)(nil),                              // 10: broker.v1.ReadyToCreateDeals
	(*ReadyToBatch)(nil),                                    // 11: broker.v1.ReadyToBatch
	(*NewBatchCreated)(nil),                                 // 12: broker.v1.NewBatchCreated
	(*DealProposalAccepted)(nil),                            // 13: broker.v1.DealProposalAccepted
	(*AuctionClosed)(nil),                                   // 14: broker.v1.AuctionClosed
	(*NewBatchPrepared)(nil),                                // 15: broker.v1.NewBatchPrepared
	(*FinalizedDeal)(nil),                                   // 16: broker.v1.FinalizedDeal
	(*StorageRequest)(nil),                                  // 17: broker.v1.StorageRequest
	(*CreatePreparedStorageRequestRequest_Metadata)(nil),    // 18: broker.v1.CreatePreparedStorageRequestRequest.Metadata
	(*CreatePreparedStorageRequestRequest_PreparedCAR)(nil), // 19: broker.v1.CreatePreparedStorageRequestRequest.PreparedCAR
	nil, // 20: broker.v1.CreatePreparedStorageRequestRequest.Metadata.TagsEntry
	(*CreatePreparedStorageRequestRequest_PreparedCAR_CARURL)(nil),  // 21: broker.v1.CreatePreparedStorageRequestRequest.PreparedCAR.CARURL
	(*CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS)(nil), // 22: broker.v1.CreatePreparedStorageRequestRequest.PreparedCAR.CARIPFS
	(*GetStorageRequestInfoResponse_StorageRequestDeal)(nil),        // 23: broker.v1.GetStorageRequestInfoResponse.StorageRequestDeal
	(*Sources_CARURL)(nil),              // 24: broker.v1.Sources.CARURL
	(*Sources_CARIPFS)(nil),             // 25: broker.v1.Sources.CARIPFS
	(*ReadyToCreateDeals_Proposal)(nil), // 26: broker.v1.ReadyToCreateDeals.Proposal
	(*ReadyToBatch_ReadyToBatchBR)(nil), // 27: broker.v1.ReadyToBatch.ReadyToBatchBR
	nil,                                 // 28: broker.v1.AuctionClosed.WinningBidsEntry
	(*AuctionClosed_WinningBid)(nil),    // 29: broker.v1.AuctionClosed.WinningBid
	(*timestamppb.Timestamp)(nil),       // 30: google.protobuf.Timestamp
}
var file_broker_v1_broker_proto_depIdxs = []int32{
	17, // 0: broker.v1.CreateStorageRequestResponse.request:type_name -> broker.v1.StorageRequest
	19, // 1: broker.v1.CreatePreparedStorageRequestRequest.prepared_car:type_name -> broker.v1.CreatePreparedStorageRequestRequest.PreparedCAR
	18, // 2: broker.v1.CreatePreparedStorageRequestRequest.metadata:type_name -> broker.v1.CreatePreparedStorageRequestRequest.Metadata
	17, // 3: broker.v1.CreatePreparedStorageRequestResponse.request:type_name -> broker.v1.StorageRequest
	17, // 4: broker.v1.GetStorageRequestInfoResponse.storage_request:type_name -> broker.v1.StorageRequest
	23, // 5: broker.v1.GetStorageRequestInfoResponse.deals:type_name -> broker.v1.GetStorageRequestInfoResponse.StorageRequestDeal
	24, // 6: broker.v1.Sources.car_url:type_name -> broker.v1.Sources.CARURL
	25, // 7: broker.v1.Sources.car_ipfs:type_name -> broker.v1.Sources.CARIPFS
	8,  // 8: broker.v1.ReadyToAuction.sources:type_name -> broker.v1.Sources
	26, // 9: broker.v1.ReadyToCreateDeals.proposals:type_name -> broker.v1.ReadyToCreateDeals.Proposal
	27, // 10: broker.v1.ReadyToBatch.data_cids:type_name -> broker.v1.ReadyToBatch.ReadyToBatchBR
	0,  // 11: broker.v1.AuctionClosed.status:type_name -> broker.v1.AuctionClosed.Status
	28, // 12: broker.v1.AuctionClosed.winning_bids:type_name -> broker.v1.AuctionClosed.WinningBidsEntry
	1,  // 13: broker.v1.StorageRequest.status:type_name -> broker.v1.StorageRequest.Status
	30, // 14: broker.v1.StorageRequest.created_at:type_name -> google.protobuf.Timestamp
	30, // 15: broker.v1.StorageRequest.updated_at:type_name -> google.protobuf.Timestamp
	20, // 16: broker.v1.CreatePreparedStorageRequestRequest.Metadata.tags:type_name -> broker.v1.CreatePreparedStorageRequestRequest.Metadata.TagsEntry
	30, // 17: broker.v1.CreatePreparedStorageRequestRequest.PreparedCAR.deadline:type_name -> google.protobuf.Timestamp
	21, // 18: broker.v1.CreatePreparedStorageRequestRequest.PreparedCAR.car_url:type_name -> broker.v1.CreatePreparedStorageRequestRequest.PreparedCAR.CARURL
	22, // 19: broker.v1.CreatePreparedStorageRequestRequest.PreparedCAR.car_ipfs:type_name -> broker.v1.CreatePreparedStorageRequestRequest.PreparedCAR.CARIPFS
	29, // 20: broker.v1.AuctionClosed.WinningBidsEntry.value:type_name -> broker.v1.AuctionClosed.WinningBid
	2,  // 21: broker.v1.APIService.CreateStorageRequest:input_type -> broker.v1.CreateStorageRequestRequest
	4,  // 22: broker.v1.APIService.CreatePreparedStorageRequest:input_type -> broker.v1.CreatePreparedStorageRequestRequest
	6,  // 23: broker.v1.APIService.GetStorageRequestInfo:input_type -> broker.v1.GetStorageRequestInfoRequest
	3,  // 24: broker.v1.APIService.CreateStorageRequest:output_type -> broker.v1.CreateStorageRequestResponse
	5,  // 25: broker.v1.APIService.CreatePreparedStorageRequest:output_type -> broker.v1.CreatePreparedStorageRequestResponse
	7,  // 26: broker.v1.APIService.GetStorageRequestInfo:output_type -> broker.v1.GetStorageRequestInfoResponse
	24, // [24:27] is the sub-list for method output_type
	21, // [21:24] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_broker_v1_broker_proto_init() }
func file_broker_v1_broker_proto_init() {
	if File_broker_v1_broker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_broker_v1_broker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStorageRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStorageRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePreparedStorageRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePreparedStorageRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageRequestInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageRequestInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToAuction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToCreateDeals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBatchCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealProposalAccepted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionClosed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBatchPrepared); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizedDeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePreparedStorageRequestRequest_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePreparedStorageRequestRequest_PreparedCAR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePreparedStorageRequestRequest_PreparedCAR_CARURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePreparedStorageRequestRequest_PreparedCAR_CARIPFS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageRequestInfoResponse_StorageRequestDeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sources_CARURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sources_CARIPFS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToCreateDeals_Proposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToBatch_ReadyToBatchBR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionClosed_WinningBid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_broker_v1_broker_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_broker_v1_broker_proto_goTypes,
		DependencyIndexes: file_broker_v1_broker_proto_depIdxs,
		EnumInfos:         file_broker_v1_broker_proto_enumTypes,
		MessageInfos:      file_broker_v1_broker_proto_msgTypes,
	}.Build()
	File_broker_v1_broker_proto = out.File
	file_broker_v1_broker_proto_rawDesc = nil
	file_broker_v1_broker_proto_goTypes = nil
	file_broker_v1_broker_proto_depIdxs = nil
}
