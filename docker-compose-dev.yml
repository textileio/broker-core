version: "3"
services:
  apid:
    build:
      context: .
      dockerfile: ./cmd/apid/Dockerfile
    platform: linux/{{platform}}
    entrypoint: ["./with-postgres.sh", "./apid"]
    environment:
      - API_LOG_DEBUG=true
      - API_LOG_JSON=false
      - API_HTTP_ADDR=:8889
      - API_MSGBROKER_TOPIC_PREFIX=test
      - DB_HOST=postgres:5432
      - DB_PASSWORD=foo
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
      - PUBSUB_EMULATOR_HOST=gpubsub:8085
      - DAEMON=api
    ports:
      - "127.0.0.1:8889:8889"
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - postgres
    restart: unless-stopped
  storaged:
    build:
      context: .
      dockerfile: ./cmd/storaged/Dockerfile
    platform: linux/{{platform}}
    environment:
      - STORAGE_LOG_DEBUG=true
      - STORAGE_LOG_JSON=false
      - STORAGE_HTTP_ADDR=:8888
      - STORAGE_IPFS_MULTIADDRS=/dns4/ipfs/tcp/5001
      - STORAGE_UPLOADER_IPFS_MULTIADDR=/dns4/ipfs/tcp/5001
      - STORAGE_BROKER_ADDR=brokerd:5000
      - STORAGE_SKIP_AUTH=true
    ports:
      - "127.0.0.1:8888:8888"
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - brokerd
    restart: unless-stopped
  auctioneerd:
    build:
      context: .
      dockerfile: ./cmd/auctioneerd/Dockerfile
    platform: linux/{{platform}}
    entrypoint: ["./with-postgres.sh", "./start_auctioneer", "daemon"]
    volumes:
      - auctioneerd_data:/data/auctioneerd
    environment:
      - AUCTIONEER_LOG_DEBUG=true
      - AUCTIONEER_LOG_JSON=false
      - AUCTIONEER_BROKER_ADDR=brokerd:5000
      - AUCTIONEER_AUCTION_DURATION=30000000000
      - AUCTIONEER_BOOTSTRAP_MULTIADDR=,
      - AUCTIONEER_MDNS=true
      - AUCTIONEER_FAKE_MODE=true
      - AUCTIONEER_MSGBROKER_TOPIC_PREFIX=test
      - DAEMON=auctioneer
      - DB_HOST=postgres:5432
      - DB_PASSWORD=foo
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
      - PUBSUB_EMULATOR_HOST=gpubsub:8085
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - postgres
      - gpubsub
    restart: unless-stopped
  bidbot:
    image: textile/bidbot:latest
    platform: linux/amd64
    volumes:
      - bidbot_data:/data/bidbot
    environment:
      - BIDBOT_LOG_DEBUG=true
      - BIDBOT_LOG_JSON=false
      - BIDBOT_HTTP_PORT=9999
      - BIDBOT_MINER_ADDR=f0111
      - BIDBOT_WALLET_ADDR_SIG=66616B655F7369676E6174757265
      - BIDBOT_ASK_PRICE=100000000000
      - BIDBOT_VERIFIED_ASK_PRICE=0
      - BIDBOT_FAST_RETRIEVAL=true
      - BIDBOT_DEAL_START_WINDOW=2880
      - BIDBOT_DEAL_DURATION_MIN=525600
      - BIDBOT_DEAL_DURATION_MAX=1051200
      - BIDBOT_DEAL_SIZE_MIN=1024
      - BIDBOT_DEAL_SIZE_MAX=32000000000
      - BIDBOT_CID_GRAVITY_KEY=JSqRy7uwE5ZdSpQLAGKy5TgXCLJL73acyAggBXZJ
      - BIDBOT_CID_GRAVITY_DEFAULT_REJECT=true
      - BIDBOT_PROPOSAL_CID_FETCH_ATTEMPTS=3
      - BIDBOT_BOOTSTRAP_MULTIADDR=,
      - BIDBOT_MDNS=true
      - BIDBOT_FAKE_MODE=true
    ports:
      - "127.0.0.1:9999:9999"
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    restart: unless-stopped
  brokerd:
    build:
      context: .
      dockerfile: ./cmd/brokerd/Dockerfile
    platform: linux/{{platform}}
    entrypoint: ["./with-postgres.sh", "./brokerd"]
    environment:
      - BROKER_LOG_DEBUG=true
      - BROKER_LOG_JSON=false
      - BROKER_IPFS_API_MULTIADDR=/dns4/ipfs/tcp/5001
      - BROKER_LISTEN_ADDR=:5000
      - BROKER_DEAL_REPLICATION=1
      - BROKER_DEAL_DURATION=1051200
      - BROKER_DEFAULT_WALLET_ADDRESS=f144zep4gitj73rrujd3jw6iprljicx6vl4wbeavi
      - BROKER_VERIFIED_DEALS=true
      - BROKER_MSGBROKER_TOPIC_PREFIX=test
      - PUBSUB_EMULATOR_HOST=gpubsub:8085
      - DB_HOST=postgres:5432
      - DB_PASSWORD=foo
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
      - DAEMON=broker
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - ipfs
      - gpubsub
      - postgres
    restart: unless-stopped
  packerd:
    build:
      context: .
      dockerfile: ./cmd/packerd/Dockerfile
    platform: linux/{{platform}}
    entrypoint: ["./with-postgres.sh", "./packerd"]
    environment:
      - PACKER_LOG_DEBUG=true
      - PACKER_LOG_JSON=false
      - PACKER_PINNER_MULTIADDR=/dns4/ipfs/tcp/5001
      - PACKER_IPFS_MULTIADDRS=/dns4/ipfs/tcp/5001
      - PACKER_BATCH_MIN_SIZE=100
      - PACKER_TARGET_SECTOR_SIZE=20000
      - PACKER_DAEMON_FREQUENCY=3s
      - PACKER_MSGBROKER_TOPIC_PREFIX=test
      - PACKER_CAR_EXPORT_URL=http://storaged:8888/car/
      - DB_HOST=postgres:5432
      - DB_PASSWORD=foo
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
      - DAEMON=packer
      - PUBSUB_EMULATOR_HOST=gpubsub:8085
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - ipfs
      - postgres
      - gpubsub
    restart: unless-stopped
  piecerd:
    build:
      context: .
      dockerfile: ./cmd/piecerd/Dockerfile
    platform: linux/{{platform}}
    entrypoint: ["./with-postgres.sh", "./piecerd"]
    environment:
      - PIECER_LOG_DEBUG=true
      - PIECER_LOG_JSON=false
      - PIECER_IPFS_MULTIADDRS=/dns4/ipfs/tcp/5001
      - PIECER_DAEMON_FREQUENCY=3s
      - PIECER_MSGBROKER_TOPIC_PREFIX=test
      - PUBSUB_EMULATOR_HOST=gpubsub:8085
      - DB_HOST=postgres:5432
      - DB_PASSWORD=foo
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
      - DAEMON=piecer
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - ipfs
      - postgres
      - gpubsub
    restart: unless-stopped
  dealerd:
    build:
      context: .
      dockerfile: ./cmd/dealerd/Dockerfile
    platform: linux/{{platform}}
    entrypoint: ["./with-postgres.sh", "./dealerd"]
    environment:
      - DEALER_LOG_DEBUG=true
      - DEALER_LOG_JSON=false
      - DEALER_MOCK=true
      - DEALER_MSGBROKER_TOPIC_PREFIX=test
      - PUBSUB_EMULATOR_HOST=gpubsub:8085
      - DB_HOST=postgres:5432
      - DB_PASSWORD=foo
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
      - DAEMON=dealer
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - postgres
      - gpubsub
    restart: unless-stopped
  gqld:
    build:
      context: .
      dockerfile: ./cmd/gqld/Dockerfile
    platform: linux/{{platform}}
    entrypoint: ["npm", "start"]
    environment:
      - DEV=true
      - PORT=5000
      - DATABASE_URL=postgres://dev_user:dev_password@postgres:5432/postgres
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - postgres
      - brokerd
      - auctioneerd
      - packerd
      - piecerd
    restart: unless-stopped
  postgres:
    image: postgres:latest
    platform: linux/amd64
    environment:
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
  ipfs:
    image: ipfs/go-ipfs:v0.8.0
    platform: linux/amd64
    environment:
      - IPFS_PROFILE=test
    ports:
      - "4001:4001"
      - "4001:4001/udp"
      - "127.0.0.1:5001:5001"
      - "127.0.0.1:8080:8080"
  gpubsub:
    image: textile/pubsub-emulator:latest
    platform: linux/amd64
    ports:
      - "127.0.0.1:8085:8085"

volumes:
  auctioneerd_data:
  bidbot_data:
