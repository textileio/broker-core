// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	broker "github.com/textileio/broker-core/gen/broker/v1"

	mock "github.com/stretchr/testify/mock"
)

// APIServiceServer is an autogenerated mock type for the APIServiceServer type
type APIServiceServer struct {
	mock.Mock
}

// CreateBrokerRequest provides a mock function with given fields: _a0, _a1
func (_m *APIServiceServer) CreateBrokerRequest(_a0 context.Context, _a1 *broker.CreateBrokerRequestRequest) (*broker.CreateBrokerRequestResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *broker.CreateBrokerRequestResponse
	if rf, ok := ret.Get(0).(func(context.Context, *broker.CreateBrokerRequestRequest) *broker.CreateBrokerRequestResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*broker.CreateBrokerRequestResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *broker.CreateBrokerRequestRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateStorageDeal provides a mock function with given fields: _a0, _a1
func (_m *APIServiceServer) CreateStorageDeal(_a0 context.Context, _a1 *broker.CreateStorageDealRequest) (*broker.CreateStorageDealResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *broker.CreateStorageDealResponse
	if rf, ok := ret.Get(0).(func(context.Context, *broker.CreateStorageDealRequest) *broker.CreateStorageDealResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*broker.CreateStorageDealResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *broker.CreateStorageDealRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBrokerRequest provides a mock function with given fields: _a0, _a1
func (_m *APIServiceServer) GetBrokerRequest(_a0 context.Context, _a1 *broker.GetBrokerRequestRequest) (*broker.GetBrokerRequestResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *broker.GetBrokerRequestResponse
	if rf, ok := ret.Get(0).(func(context.Context, *broker.GetBrokerRequestRequest) *broker.GetBrokerRequestResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*broker.GetBrokerRequestResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *broker.GetBrokerRequestRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedAPIServiceServer provides a mock function with given fields:
func (_m *APIServiceServer) mustEmbedUnimplementedAPIServiceServer() {
	_m.Called()
}
